// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyProject.API.Context;

#nullable disable

namespace MyProject.API.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyProject.API.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int>("CartQuantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            CartId = 1,
                            CartQuantity = 1,
                            UserId = 1
                        },
                        new
                        {
                            CartId = 2,
                            CartQuantity = 5,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Shoes"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Garments"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Accessories"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Shoes"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Garments"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Accessories"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Shoes"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Garments"
                        },
                        new
                        {
                            ID = 9,
                            Name = "Accessories"
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "Mohamad",
                            LastName = "Watted",
                            Mail = "m.watad90@gmail.com"
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "Shadi",
                            LastName = "Watad",
                            Mail = "shadi@gmail.com"
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Man"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Ladies"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Kids"
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.GalleryImage", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("GalleryImage");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/kFFe4rc.png",
                            ProductID = 1,
                            Title = "shoes for man"
                        },
                        new
                        {
                            ID = 2,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/FSzo30R.png",
                            ProductID = 2,
                            Title = "shoes for man"
                        },
                        new
                        {
                            ID = 3,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/OrJ3uxz.png",
                            ProductID = 3,
                            Title = "shoes for man"
                        },
                        new
                        {
                            ID = 4,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/FMyHAER.png",
                            ProductID = 4,
                            Title = "T-SHIRTS for man"
                        },
                        new
                        {
                            ID = 5,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/1vvkkun.png",
                            ProductID = 5,
                            Title = "T-SHIRTS for man"
                        },
                        new
                        {
                            ID = 6,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/Q2Omp1q.png",
                            ProductID = 6,
                            Title = "T-SHIRTS for man"
                        },
                        new
                        {
                            ID = 7,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/6HUpAq5.png",
                            ProductID = 7,
                            Title = "trousers for man"
                        },
                        new
                        {
                            ID = 8,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/tpdPfHe.png",
                            ProductID = 8,
                            Title = "trousers for man"
                        },
                        new
                        {
                            ID = 9,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/LJnaKkR.png",
                            ProductID = 9,
                            Title = "trousers for man"
                        },
                        new
                        {
                            ID = 10,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/yhlgVxL.png",
                            ProductID = 10,
                            Title = "acc for man"
                        },
                        new
                        {
                            ID = 11,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/f2TOHlO.png",
                            ProductID = 11,
                            Title = "acc for man"
                        },
                        new
                        {
                            ID = 12,
                            Alt = "man",
                            ImageURL = "https://i.imgur.com/fKIG06M.png",
                            ProductID = 12,
                            Title = "acc for man"
                        },
                        new
                        {
                            ID = 13,
                            Alt = "woman_shoes",
                            ImageURL = "https://i.imgur.com/HpT7xCj.png",
                            ProductID = 13,
                            Title = "shoes pastel color for woman"
                        },
                        new
                        {
                            ID = 14,
                            Alt = "woman_shoes",
                            ImageURL = "https://i.imgur.com/48fArMF.png",
                            ProductID = 14,
                            Title = "shoes pink for woman"
                        },
                        new
                        {
                            ID = 15,
                            Alt = "woman_shoes",
                            ImageURL = "https://i.imgur.com/SuXlbYo.png",
                            ProductID = 15,
                            Title = "shoes pink for woman"
                        },
                        new
                        {
                            ID = 16,
                            Alt = "woman",
                            ImageURL = "https://i.imgur.com/nA84c5Y.png",
                            ProductID = 16,
                            Title = "T-SHIRT for woman"
                        },
                        new
                        {
                            ID = 17,
                            Alt = "woman",
                            ImageURL = "https://i.imgur.com/KLI84On.png",
                            ProductID = 17,
                            Title = "T-SHIRT for woman"
                        },
                        new
                        {
                            ID = 18,
                            Alt = "woman",
                            ImageURL = "https://i.imgur.com/N3Hw655.png",
                            ProductID = 18,
                            Title = "T-SHIRT for woman"
                        },
                        new
                        {
                            ID = 19,
                            Alt = "woman_trousers",
                            ImageURL = "https://i.imgur.com/9Unyl2Q.png",
                            ProductID = 19,
                            Title = "trousers for woman"
                        },
                        new
                        {
                            ID = 20,
                            Alt = "woman_trousers",
                            ImageURL = "https://i.imgur.com/UxLMIKE.png",
                            ProductID = 20,
                            Title = "trousers for woman"
                        },
                        new
                        {
                            ID = 21,
                            Alt = "woman_trousers",
                            ImageURL = "https://i.imgur.com/XaXUJNl.png",
                            ProductID = 21,
                            Title = "trousers for woman"
                        },
                        new
                        {
                            ID = 22,
                            Alt = "woman_acc",
                            ImageURL = "https://i.imgur.com/THBDPax.png",
                            ProductID = 22,
                            Title = "acc for woman"
                        },
                        new
                        {
                            ID = 23,
                            Alt = "woman_acc",
                            ImageURL = "https://i.imgur.com/vNPCxkh.png",
                            ProductID = 23,
                            Title = "acc for woman"
                        },
                        new
                        {
                            ID = 24,
                            Alt = "woman_acc",
                            ImageURL = "https://i.imgur.com/Q3UjsjY.png",
                            ProductID = 24,
                            Title = "acc for woman"
                        },
                        new
                        {
                            ID = 25,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/wylMcYn.png",
                            ProductID = 25,
                            Title = "shoes for kids"
                        },
                        new
                        {
                            ID = 26,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/ydaUz58.png",
                            ProductID = 26,
                            Title = "shoes for kids"
                        },
                        new
                        {
                            ID = 27,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/WeiJljO.png",
                            ProductID = 27,
                            Title = "shoes for kids"
                        },
                        new
                        {
                            ID = 28,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/pBhxbGl.png",
                            ProductID = 28,
                            Title = "T-SHIRT for kids"
                        },
                        new
                        {
                            ID = 29,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/UJeZ4jX.png",
                            ProductID = 29,
                            Title = "T-SHIRT for kids"
                        },
                        new
                        {
                            ID = 30,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/pBhxbGl.png",
                            ProductID = 30,
                            Title = "T-SHIRT for kids"
                        },
                        new
                        {
                            ID = 31,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/5sEKFeH.png",
                            ProductID = 31,
                            Title = "acc for kids"
                        },
                        new
                        {
                            ID = 32,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/iaP5xXB.png",
                            ProductID = 32,
                            Title = "acc for kids"
                        },
                        new
                        {
                            ID = 33,
                            Alt = "kids",
                            ImageURL = "https://i.imgur.com/BxlFtRr.png",
                            ProductID = 33,
                            Title = "acc for kids"
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShippingAddressID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CartId");

                    b.HasIndex("CustomerID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CartId = 1,
                            CustomerID = 1,
                            IsPaid = true,
                            OrderDate = new DateTime(2024, 1, 3, 19, 23, 58, 882, DateTimeKind.Local).AddTicks(9422),
                            ShippingAddressID = 1
                        },
                        new
                        {
                            OrderId = 2,
                            CartId = 2,
                            CustomerID = 2,
                            IsPaid = false,
                            OrderDate = new DateTime(2024, 1, 2, 19, 23, 58, 882, DateTimeKind.Local).AddTicks(9473),
                            ShippingAddressID = 2
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.OrderItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CartID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CartID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CartID = 1,
                            ProductID = 1,
                            Quantity = 2
                        },
                        new
                        {
                            ID = 2,
                            CartID = 2,
                            ProductID = 2,
                            Quantity = 8
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AddedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getDate()");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("SubCategoryID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 299.90m,
                            ProductName = "Sneakers001",
                            SubCategoryID = 1
                        },
                        new
                        {
                            ID = 2,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 359.90m,
                            ProductName = "Sneakers002",
                            SubCategoryID = 1
                        },
                        new
                        {
                            ID = 3,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 59.90m,
                            ProductName = "Sneakers003",
                            SubCategoryID = 1
                        },
                        new
                        {
                            ID = 4,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 89.90m,
                            ProductName = "T-Shirts001",
                            SubCategoryID = 2
                        },
                        new
                        {
                            ID = 5,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "T-Shirts002",
                            SubCategoryID = 2
                        },
                        new
                        {
                            ID = 6,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "T-Shirts003",
                            SubCategoryID = 2
                        },
                        new
                        {
                            ID = 7,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "Pants001",
                            SubCategoryID = 3
                        },
                        new
                        {
                            ID = 8,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "Pants002",
                            SubCategoryID = 3
                        },
                        new
                        {
                            ID = 9,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "Pants003",
                            SubCategoryID = 3
                        },
                        new
                        {
                            ID = 10,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 299.90m,
                            ProductName = "ACC001",
                            SubCategoryID = 4
                        },
                        new
                        {
                            ID = 11,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 59.90m,
                            ProductName = "ACC002",
                            SubCategoryID = 4
                        },
                        new
                        {
                            ID = 12,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 1,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 89.90m,
                            ProductName = "ACC003",
                            SubCategoryID = 4
                        },
                        new
                        {
                            ID = 13,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 299.90m,
                            ProductName = "Sneakers001",
                            SubCategoryID = 5
                        },
                        new
                        {
                            ID = 14,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 359.90m,
                            ProductName = "Sneakers002",
                            SubCategoryID = 5
                        },
                        new
                        {
                            ID = 15,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 59.90m,
                            ProductName = "Sneakers003",
                            SubCategoryID = 5
                        },
                        new
                        {
                            ID = 16,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 89.90m,
                            ProductName = "T-Shirts001",
                            SubCategoryID = 6
                        },
                        new
                        {
                            ID = 17,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "T-Shirts002",
                            SubCategoryID = 6
                        },
                        new
                        {
                            ID = 18,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "T-Shirts003",
                            SubCategoryID = 6
                        },
                        new
                        {
                            ID = 19,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "Pants001",
                            SubCategoryID = 7
                        },
                        new
                        {
                            ID = 20,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "Pants002",
                            SubCategoryID = 7
                        },
                        new
                        {
                            ID = 21,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "Pants003",
                            SubCategoryID = 7
                        },
                        new
                        {
                            ID = 22,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "ACC",
                            SubCategoryID = 8
                        },
                        new
                        {
                            ID = 23,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "ACC",
                            SubCategoryID = 8
                        },
                        new
                        {
                            ID = 24,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 2,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "ACC",
                            SubCategoryID = 8
                        },
                        new
                        {
                            ID = 25,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 299.90m,
                            ProductName = "Sneakers001",
                            SubCategoryID = 9
                        },
                        new
                        {
                            ID = 26,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 359.90m,
                            ProductName = "Sneakers002",
                            SubCategoryID = 9
                        },
                        new
                        {
                            ID = 27,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 59.90m,
                            ProductName = "Sneakers003",
                            SubCategoryID = 9
                        },
                        new
                        {
                            ID = 28,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 89.90m,
                            ProductName = "T-Shirts001",
                            SubCategoryID = 10
                        },
                        new
                        {
                            ID = 29,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "T-Shirts002",
                            SubCategoryID = 10
                        },
                        new
                        {
                            ID = 30,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 29.90m,
                            ProductName = "T-Shirts003",
                            SubCategoryID = 10
                        },
                        new
                        {
                            ID = 31,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 299.90m,
                            ProductName = "ACC001",
                            SubCategoryID = 12
                        },
                        new
                        {
                            ID = 32,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 59.90m,
                            ProductName = "ACC002",
                            SubCategoryID = 12
                        },
                        new
                        {
                            ID = 33,
                            AddedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 0,
                            DepartmentID = 3,
                            Description = "Lorem, ipsum dolor sit amet consectetur adipisicing ",
                            Price = 89.90m,
                            ProductName = "ACC003",
                            SubCategoryID = 12
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.SubCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            SubCategoryName = "Sneakers"
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 2,
                            SubCategoryName = "T-Shirts"
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 2,
                            SubCategoryName = "Pants"
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 3,
                            SubCategoryName = "ACC"
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 4,
                            SubCategoryName = "Sneakers"
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 5,
                            SubCategoryName = "T-Shirts"
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 5,
                            SubCategoryName = "Pants"
                        },
                        new
                        {
                            ID = 8,
                            CategoryID = 6,
                            SubCategoryName = "ACC"
                        },
                        new
                        {
                            ID = 9,
                            CategoryID = 7,
                            SubCategoryName = "Sneakers"
                        },
                        new
                        {
                            ID = 10,
                            CategoryID = 8,
                            SubCategoryName = "T-Shirts"
                        },
                        new
                        {
                            ID = 11,
                            CategoryID = 8,
                            SubCategoryName = "Pants"
                        },
                        new
                        {
                            ID = 12,
                            CategoryID = 9,
                            SubCategoryName = "ACC"
                        });
                });

            modelBuilder.Entity("MyProject.API.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EmailAddress = "Admin@gmail.com",
                            FirstName = "Mohamad",
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Watted",
                            Password = "12345678",
                            Type = 999,
                            UserName = "mohamad"
                        },
                        new
                        {
                            ID = 2,
                            EmailAddress = "User@gmail.com",
                            FirstName = "Shadi",
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Watad",
                            Password = "87654321",
                            Type = 0,
                            UserName = "shadi"
                        },
                        new
                        {
                            ID = 3,
                            EmailAddress = "Toto@gmail.com",
                            FirstName = "Toto",
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Toto",
                            Password = "55555555",
                            Type = 1,
                            UserName = "toto"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyProject.API.Models.Cart", b =>
                {
                    b.HasOne("MyProject.API.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("MyProject.API.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyProject.API.Models.GalleryImage", b =>
                {
                    b.HasOne("MyProject.API.Models.Product", "Product")
                        .WithMany("GalleryImage")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyProject.API.Models.Order", b =>
                {
                    b.HasOne("MyProject.API.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.API.Models.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.API.Models.User", null)
                        .WithMany("Order")
                        .HasForeignKey("UserID");

                    b.Navigation("Cart");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MyProject.API.Models.OrderItem", b =>
                {
                    b.HasOne("MyProject.API.Models.Cart", "Cart")
                        .WithMany("OrderItems")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyProject.API.Models.Product", b =>
                {
                    b.HasOne("MyProject.API.Models.Department", "Department")
                        .WithMany("Products")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyProject.API.Models.SubCategory", "SubCategory")
                        .WithMany("Product")
                        .HasForeignKey("SubCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("MyProject.API.Models.SubCategory", b =>
                {
                    b.HasOne("MyProject.API.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MyProject.API.Models.Cart", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("MyProject.API.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("MyProject.API.Models.Customer", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("MyProject.API.Models.Department", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MyProject.API.Models.Product", b =>
                {
                    b.Navigation("GalleryImage");
                });

            modelBuilder.Entity("MyProject.API.Models.SubCategory", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyProject.API.Models.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
